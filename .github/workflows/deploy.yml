name: Deploy

on:
  push:
    branches:
      - master

jobs:
  changes:
    name: "Check for docs changes"
    runs-on: ubuntu-latest
    outputs:
      developers-site: ${{ steps.filter.outputs.developers-site }}
      onedot: ${{ steps.filter.outputs.onedot }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.4.2
        id: filter
        with:
          filters: |
            developers-site:
              - 'developers.pvtool.com/**'
            onedot:
              - 'products/1.1.1.1/**'
            api:
              - 'products/api/**'

  deploy-developers-site:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.developers-site == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: "developers.pvtool.com"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          npm run build
        env:
          WORKERS_ENV: development
      - name: Publish staging
        uses: cloudflare/wrangler-action@1.2.0
        with:
          #apiToken: ${{ secrets.CF_API_TOKEN }}
          apiToken: "Q_V258U5P-o064hrWWjZ0DMJIZwhBHXNIMgGPyjo"
          workingDirectory: "developers.pvtool.com"
          wranglerVersion: '1.13.0'
      - name: Publish production
        uses: cloudflare/wrangler-action@1.2.0
        with:
          #apiToken: ${{ secrets.CF_API_TOKEN }}
          apiToken: "Q_V258U5P-o064hrWWjZ0DMJIZwhBHXNIMgGPyjo"
          workingDirectory: "developers.pvtool.com"
          environment: "production"
          wranglerVersion: '1.13.0'

  deploy-1-1-1-1:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.onedot == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/1.1.1.1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build
        env:
          WORKERS_ENV: development
      - name: Publish staging
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "products/1.1.1.1"
      - name: Publish production
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "products/1.1.1.1"
          environment: "production"

  deploy-api:
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.api == 'true' }}
    defaults:
      run:
        shell: bash
        working-directory: products/api
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.2.0
      - run: |
          npm install
          mkdir .docs
          npm run ghactionsbootstrap
          npm run build
        env:
          WORKERS_ENV: development
      - name: Publish staging
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "products/api"
          wranglerVersion: '1.13.0'
      - name: Publish production
        uses: cloudflare/wrangler-action@1.2.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "products/api"
          environment: "production"
          wranglerVersion: '1.13.0'